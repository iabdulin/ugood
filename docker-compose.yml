# docker-compose.yml

services:
  db:
    image: postgres:17.4
    container_name: ugood_db
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-ugood_dev} # Use .env var or default
      POSTGRES_USER: ${POSTGRES_USER:-postgres} # Use .env var or default
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password} # Use .env var or default
    ports:
      - "5433:5432"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.local
    container_name: ugood_backend
    command: bundle exec rails s -b 0.0.0.0
    volumes:
      - ./backend:/app # Mount local code into container for live reloading
      - bundle_cache:/usr/local/bundle/ # Persist installed gems
    ports:
      - "3000:3000"
    depends_on:
      - db # Wait for the db service to start (basic check)
    environment:
      RAILS_ENV: development
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-password}@db:5432/${POSTGRES_DB:-ugood_dev}
      RAILS_MASTER_KEY: ${RAILS_MASTER_KEY} # Needed if using Rails credentials
    # Add stdin_open and tty for debugging with tools like 'binding.pry'
    stdin_open: true
    tty: true

  frontend:
    build:
      context: ./frontend # Path to the directory containing the frontend Dockerfile
      dockerfile: Dockerfile.local
    container_name: ugood_frontend
    volumes:
      - ./frontend:/app # Mount local code into container for live reloading
      # Prevent node_modules on host from overwriting container's node_modules
      - /app/node_modules
    ports:
      - "5173:5173" # Format: HOST_PORT:CONTAINER_PORT
    environment:
      REACT_APP_API_URL: http://localhost:3000/api/v1
      CHOKIDAR_USEPOLLING: "true" # Helps with hot-reloading in some Docker setups
    depends_on:
      - backend # Optional: Wait for backend (doesn't guarantee API is ready)

volumes:
  db_data: # Named volume for database persistence
  bundle_cache: # Named volume for gems
